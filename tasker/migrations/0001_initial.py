# Generated by Django 2.2.5 on 2019-10-07 11:49

import autoslug.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Board',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='label', unique=True)),
                ('label', models.CharField(max_length=100)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('cloned_from', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='clones', to='tasker.Board')),
            ],
            options={
                'ordering': ['created'],
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='label', unique_with=['board'])),
                ('label', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('reserved_by', models.CharField(blank=True, max_length=30, null=True)),
                ('reserved_until', models.DateTimeField(default=django.utils.timezone.now)),
                ('board', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='tasker.Board')),
            ],
            options={
                'ordering': ['board'],
            },
        ),
        migrations.CreateModel(
            name='Handling',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('editor', models.CharField(max_length=30)),
                ('start', models.DateTimeField(default=django.utils.timezone.now)),
                ('end', models.DateTimeField(blank=True, null=True)),
                ('success', models.BooleanField(blank=True, null=True)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='handlings', to='tasker.Task')),
            ],
            options={
                'ordering': ['task', 'start'],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('posted', models.DateTimeField(auto_now_add=True)),
                ('text', models.TextField()),
                ('handling', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasker_comments', to='tasker.Handling')),
            ],
            options={
                'ordering': ['handling', 'posted'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('posted', models.DateTimeField(auto_now_add=True)),
                ('file', models.FileField(upload_to='attachments/')),
                ('handling', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasker_attachments', to='tasker.Handling')),
            ],
            options={
                'ordering': ['handling', 'posted'],
                'abstract': False,
            },
        ),
        migrations.AddConstraint(
            model_name='handling',
            constraint=models.UniqueConstraint(fields=('task', 'editor', 'start'), name='unique_start'),
        ),
        migrations.AddConstraint(
            model_name='handling',
            constraint=models.UniqueConstraint(fields=('task', 'editor', 'end'), name='unique_end'),
        ),
    ]
